 <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Slot Machine</title>
        <link rel="stylesheet" href="style.css">
        <script src="https://code.jquery.com/jquery-3.7.1.slim.min.js" integrity="sha256-kmHvs0B+OpCW5GVHUNjv9rOmY0IvSIRcf7zGUDTDQM8=" crossorigin="anonymous"></script>
    </head>
    <body>
        <script src="../server"></script>
        <script src="spin.js"></script>
    

        <div class="container">
            <h1>Slot Machine</h1>
            <!-- <div class="reels-container">

                <div class="reels">
                 
                    <% symbols.forEach((symbol, index) => { %>
                      <% if (visibleIndex === index) { %>
                        <div class="reel"><%= symbol %></div>
                      <% } %>
                    <% }); %>
                </div>  

                <div class="reels">
                 
                    <% symbols.forEach((symbol, index) => { %>
                      <% if (visibleIndex === index) { %>
                        <div class="reel"><%= symbol %></div>
                      <% } %>
                    <% }); %>
                </div>  

                <div class="reels">
                 
                    <% symbols.forEach((symbol, index) => { %>
                      <% if (visibleIndex === index) { %>
                        <div class="reel"><%= symbol %></div>
                      <% } %>
                    <% }); %>
                </div>  

             </div> -->

             <div id="app">
              <div class="doors">
                <div class="door">
                  <div class="boxes">
                  </div>
                </div>
            
                <div class="door">
                  <div class="boxes">
                  </div>
                </div>
            
                <div class="door">
                  <div class="boxes">
                  </div>
                </div>
              </div>
            
              <div class="buttons">
                <button id="spinner">Spin</button>
                <button id="reseter">Reset</button>
              </div>
            
              <p class="info" style="display: none;"></p>
              <p class="message" ></p>
            </div>


             
            
            <form id="deposit-form" action="/deposit" method="post">
                <label for="amount">Deposit Amount:</label>
                <input type="number" id="amount" name="amount" required>
                <button type="submit" id="deposit-button">Deposit</button>
            </form>
            <p class="balance">Current Balance: <%=balance%></p>
            <!-- <button type="button" id="spin-button">SPIN </button> -->
            <script>
              

  const items = [
    "7Ô∏è‚É£",
    "‚ùå",
    "üçì",
    "üçã",
    "üçâ",
    "üçí",
    "üíµ",
    "üçä",
    "üçé"
  ];
  document.querySelector(".info").textContent = items.join(" ");

  const doors = document.querySelectorAll(".door");
  document.querySelector("#spinner").addEventListener("click", spin);
  document.querySelector("#reseter").addEventListener("click", init);

  async function spin() {
    init(false, 1, 2);
    for (const door of doors) {
      const boxes = door.querySelector(".boxes");
      const duration = parseInt(boxes.style.transitionDuration);
      boxes.style.transform = "translateY(0)";
      await new Promise((resolve) => {
        setTimeout(resolve, duration * 100);
      });
    }
  }

  function init(firstInit = true, groups = 1, duration = 1) {
    for (const door of doors) {
      if (firstInit) {
        door.dataset.spinned = "0";
      } else if (door.dataset.spinned === "1") {
        return;
      }

      const boxes = door.querySelector(".boxes");
      const boxesClone = boxes.cloneNode(false);

      const pool = ["‚ùì"];
      if (!firstInit) {
        const arr = [];
        for (let n = 0; n < (groups > 0 ? groups : 1); n++) {
          arr.push(...items);
        }
        pool.push(...shuffle(arr));

        boxesClone.addEventListener(
          "transitionstart",
          function () {
            door.dataset.spinned = "1";
            this.querySelectorAll(".box").forEach((box) => {
              box.style.filter = "blur(1px)";
            });
          },
          { once: true }
        );

        boxesClone.addEventListener(
          "transitionend",
          function () {
            this.querySelectorAll(".box").forEach((box, index) => {
              box.style.filter = "blur(0)";
              if (index > 0) this.removeChild(box);
            });
          },
          { once: true }
        );
      }

      for (let i = pool.length - 1; i >= 0; i--) {
        const box = document.createElement("div");
        box.classList.add("box");
        box.style.width = door.clientWidth + "px";
        box.style.height = door.clientHeight + "px";
        box.textContent = pool[i];
        boxesClone.appendChild(box);
      }
      boxesClone.style.transitionDuration = `${duration > 0 ? duration : 1}s`;
      boxesClone.style.transform = `translateY(-${
        door.clientHeight * (pool.length - 1)
      }px)`;
      door.replaceChild(boxesClone, boxes);
    }
    setTimeout(()=>{
          
          const reels = document.querySelectorAll('.door .box');
          if (reels[0].innerHTML === reels[1].innerHTML && reels[1].innerHTML === reels[2].innerHTML) {
            console.log('win')
            document.getElementsByClassName("message")[0].innerHTML = "Congratulations! You won"
            
                // return { win: true, message: `Congratulations! You won with ${reels.join(', ')}!` };
            } else {
              console.log('try again')
              document.getElementsByClassName("message")[0].innerHTML = "Sorry, you lost. Better luck next time!"
                // return { win: false, message: `Sorry, you lost. Better luck next time!` };
            }
        }, 5000)
  }

  function shuffle([...arr]) {
    let m = arr.length;
    while (m) {
      const i = Math.floor(Math.random() * m--);
      [arr[m], arr[i]] = [arr[i], arr[m]];
    }
    return arr;
  }

  init();

  
            </script>
            
            
        </div>
        <a href="/logout" class="logout">Logout</a>
        
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>


        
    </body>
    </html> 

 

    